
index	ยง  tokenization 	ยง  vectorization 			ยง konkatenation 
1	   parser-tokens   	countvectorizer (with and without n-grams), hashingvectorizer (tree structure and mathematical types are ignored)

2	   parser-tokens       every single token is represented as one-hot vector, one-hot vectors are concatenated in DFS Preorder of binary structure (e.g. 2 + 2 -> [0..1..0..0][0..1..0][0..1..0]) this is done with or without types: (scal -> [0100], operator -> [1000] -> 2+2 -> ([0..1..0..0][1000])([0..1..0][0100])([0..1..0][0100]) )

3 	   parser-tokens (only types)  one-hot-vectors  -> concatenated in dfs preorder of binary struct  (e.g. 2 + 2 with scal -> [0100], operator -> [1000]: preorder dfs: [1000][0100][0100])

4	   parser+BPE tokens   countvectorizer (with and without n-grams), hashingvectorizer
	   
5	ยง  tangent-cft
